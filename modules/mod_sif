#!/bin/bash

abspath(){
	readlink -m "$1"
}

parse(){
	pushd `dirname "$1"` >/dev/null
	DEPS=$(cat "`basename \"$1\"`" | sed -E -n '1h;1!H;${;g;s/<param name="filename">\n\s*<string>/<filename>/g;p;}' | egrep "<param name=\"canvas\" use=\".*#.*\"\/>|<filename")
	DEPS=$(echo -e "$DEPS" | sed -e "s/.*<filename>\(.*\)<\/string>.*/\1/" -e "s/.*<param name=\"canvas\" use=\"\(.*\)#.*\"\/>.*/\1/p")
	if [ ! -z "$DEPS" ]; then
		while read LINE; do
			LINE=$(abspath "`pwd -P`/$LINE")
			#if ( echo "$LINE" | grep -E "\.sif(|z)$" ); then
			if ! ( echo $ALLDEPS | grep -E "^$LINE$" ); then
				echo "$LINE"
			fi
		done < <( echo "$DEPS" )
	fi
	popd > /dev/null
}

get_unparsed(){
	echo "$ALLDEPS" | grep -E "\.sif(|z)$" | while read LINE; do
		if ! ( echo "$SIFS" | grep -E "^$LINE$" >/dev/null ); then
			echo "$LINE"
			exit
		fi
	done
}

deps(){
	if [ ! -z $1 ]; then 
		TARGET=$1
	fi
	
	SIFS=""
	ALLDEPS=''
	
	while [ ! -z "$TARGET" ];do
		#echo "parsing `abspath "$TARGET"`..."
		SIFS=$(echo -e "$SIFS\n"`abspath "$TARGET"`)
		DEPS=`parse "$TARGET"`
		ALLDEPS=`echo -e "$ALLDEPS\n$DEPS"`
		TARGET=`get_unparsed`
	done
	
	echo "$ALLDEPS" | sed '/^$/d'
}

rules(){
	if [[ $FORMAT == 'mpg' ]]; then
		if ! ( which ffmpeg > /dev/null 2>&1 ); then
			echo "   FATAL: Can't find 'ffmpeg' binary!" >&2
			exit 1
		fi
		cat >> $MAKEFILE << EOF
$RENDERPATH.mpg: $RENDERPATH/file.lst
	#TODO: ffmpeg stuff
EOF
	RENDERPATH="$(basename $RENDERPATH .$FORMAT).png"
	FORMAT='png'
	fi
	
	# Get image dimensions from file if it's unspecified
	[ -z $WIDTH ] && OPTWIDTH="" || OPTWIDTH="-w $WIDTH"
	[ -z $HEIGHT ] && OPTHEIGHT="" || OPTHEIGHT="-h $HEIGHT"

	if [ ! -z $SINGLE ]; then
		RANGE="--time ${SINGLE}f"
		OUTPUT="$RENDERPATH"
		cat >> $MAKEFILE << EOF
$RENDERPATH: $TARGET $DEPS
	rm -rf $RENDERPATH
	synfig -t $FORMAT -o $OUTPUT $RANGE $OPTWIDTH $OPTHEIGHT $TARGET
EOF
	else
		OUTPUT="$RENDERPATH/file.$FORMAT"
		cat >> $MAKEFILE << EOF
$RENDERPATH: $RENDERPATH/file.lst
.PHONY: $RENDERPATH
$RENDERPATH/file.lst: $TARGET $DEPS
	rm -rf $RENDERPATH
	mkdir -p $RENDERPATH
	synfig -t $FORMAT -o $OUTPUT $RANGE -w $WIDTH -h $HEIGHT $TARGET
	echo "FPS $FPS" > $RENDERPATH/file.lst
	( cd $RENDERPATH; ls -1 *.$FORMAT >> file.lst )
EOF
	fi

	echo "$RENDERPATH-clean:" >> $MAKEFILE
	echo "	rm -rf $RENDERPATH" >> $MAKEFILE
	if [[ $FORMAT == 'mpg' ]]; then
		RENDERPATH="$(basename $RENDERPATH .$FORMAT).mpg"
		echo "	rm -f $RENDERPATH.mpg" >> $MAKEFILE
	fi
}

if ! ( which synfig > /dev/null 2>&1 ); then
	echo "   FATAL: Can't find 'synfig' binary!" >&2
	exit 1
fi

$1 $2
