#!/bin/bash

escape()
{
echo "$1"| sed -e "s/ /\\\\\\ /g"
}

format(){
	echo $FORMAT
}

abspath(){
	readlink -m "$1"
}

parse(){
	pushd "`dirname "$1"`" >/dev/null
	DEPS=$(cat "`basename \"$1\"`" | awk 'BEGIN {x=0}{y=0}
{
if ($0~"<param name=\"filename\">") {x=1}
if (x==1) {
	if ($0~"<string.*>.*</string>") {print $0}
}
if ($0~"</param>") {x=0}
if ($0~"<param name=\"canvas\" use=\".*#.*\"/>") {print $0}
}')
	DEPS=$(echo -e "$DEPS" | sed -e "s/.*<string.*>\(.*\)<\/string>.*/\1/" -e "s/.*<param name=\"canvas\" use=\"\(.*\)#.*\"\/>.*/\1/p")
	if [ ! -z "$DEPS" ]; then
		while read LINE; do
			LINE=$(abspath "`pwd -P`/$LINE")
			#if ( echo "$LINE" | grep -E "\.sif(|z)$" ); then
			if ! ( echo $ALLDEPS | grep -E "^$LINE$" ); then
				echo "$LINE"
			fi
		done < <( echo "$DEPS" )
	fi
	popd > /dev/null
}

get_unparsed(){
	echo "$ALLDEPS" | grep -E "\.sif(|z)$" | while read LINE; do
		if ! ( echo "$SIFS" | grep -E "^$LINE$" >/dev/null ); then
			echo "$LINE"
			exit
		fi
	done
}

deps(){
	if [ ! -z $1 ]; then 
		TARGET=$1
	fi
	
	SIFS=""
	ALLDEPS=''
	
	while [ ! -z "$TARGET" ];do
		#echo "parsing `abspath $TARGET`..."
		SIFS=$(echo -e "$SIFS\n"`abspath "$TARGET"`)
		DEPS=`parse "$TARGET"`
		ALLDEPS=`echo -e "$ALLDEPS\n$DEPS"`
		TARGET=`get_unparsed`
	done
	
	echo "$ALLDEPS" | sed '/^$/d'
}

rules(){
	if [[ $FORMAT == 'mpg' ]]; then
		if ! ( which ffmpeg > /dev/null 2>&1 ); then
			echo "   FATAL: Can't find 'ffmpeg' binary!" >&2
			exit 1
		fi
		RENDERPATH_BASE="`echo "$RENDERPATH" | sed -e "s|\.$FORMAT$||"`"
		echo "`escape "$RENDERPATH"`: `escape "${RENDERPATH_BASE}.png"`/file.lst" >> "$MAKEFILE"
		echo "	ffmpeg -y -i \"${RENDERPATH_BASE}.png/file.%04d.png\" -sameq -r $FPS \"${RENDERPATH}\"" >> "$MAKEFILE"
		
		RENDERPATH="${RENDERPATH_BASE}.png"
		FORMAT='png'
		FFMPEGFORMAT='mpg'
	fi
	
	# Get image dimensions from file if it's unspecified
	[ -z $WIDTH ] && OPTWIDTH="" || OPTWIDTH="-w $WIDTH"
	[ -z $HEIGHT ] && OPTHEIGHT="" || OPTHEIGHT="-h $HEIGHT"

	if [ ! -z $SINGLE ]; then
		RANGE="--time ${SINGLE}f"
		OUTPUT=$RENDERPATH
		echo "`escape "$RENDERPATH"`: `escape "$TARGET"` $DEPS" >> "$MAKEFILE"
		echo "	rm -rf \"$RENDERPATH\"" >> "$MAKEFILE"
		echo "	synfig -t $FORMAT -o \"$OUTPUT\" $RANGE $OPTWIDTH $OPTHEIGHT \"$TARGET\"" >> "$MAKEFILE"
	else
		OUTPUT="$RENDERPATH/file.$FORMAT"
		echo "`escape "$RENDERPATH"`: `escape "$RENDERPATH"`/file.lst" >> "$MAKEFILE"
		echo "	touch \"$RENDERPATH\"" >> "$MAKEFILE"
		echo "`escape "$RENDERPATH"`/file.lst: `escape "$TARGET"` $DEPS" >> "$MAKEFILE"
		echo "	rm -rf \"$RENDERPATH\"" >> "$MAKEFILE"
		echo "	mkdir -p \"$RENDERPATH\"" >> "$MAKEFILE"
		echo "	synfig -t $FORMAT -o \"$OUTPUT\" $RANGE -w $WIDTH -h $HEIGHT \"$TARGET\"" >> "$MAKEFILE"
		echo "	echo \"FPS $FPS\" > \"$RENDERPATH/file.lst\"" >> "$MAKEFILE"
		echo "	( cd \"$RENDERPATH\"; ls -1 *.$FORMAT >> file.lst )" >> "$MAKEFILE"
	fi

	echo "`escape "$RENDERPATH"`-clean:" >> "$MAKEFILE"
	echo "	rm -rf \"$RENDERPATH\"" >> "$MAKEFILE"
	if [ ! -z $FFMPEGFORMAT ]; then
		RENDERPATH=$(echo $RENDERPATH | sed -e "s|\.$FORMAT$||")".$FFMPEGFORMAT"
		echo "	rm -f \"$RENDERPATH\"" >> "$MAKEFILE"
	fi
}

if ! ( which synfig > /dev/null 2>&1 ); then
	echo "   FATAL: Can't find 'synfig' binary!" >&2
	exit 1
fi

$1 "$2"
